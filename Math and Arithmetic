// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;

import"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol";

contract MathandArithmatic {
    //Overflow and underflow autometically reverts
    function testMath(uint8 x, uint8 y) public pure returns (uint8) {
        assert(y <= x);
        return x + y;
    }
//This is how to call a library function  
    function testMath(uint x, uint y) public pure returns (uint) {
        //SafeMath.mod()
        //SafeMath.add()
        //SafeMath.mul()
        //SafeMath.div()
        return SafeMath.sub(x, y); 

    }

    using SafeMath for uint;
    function testMath2(uint x, uint y) public pure returns (uint) {
        
        return x.mod(y);
    }
}
